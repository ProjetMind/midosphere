<?php

namespace Mind\MpBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ConversationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ConversationRepository extends EntityRepository
{
    /**
     * 
     * Fournit le user dont le username commence par le terme
     * 
     * @param type $terms
     * @return array
     */
    public function getAutocompleteResult($terms){
        
        $query = $this->_em->createQuery('SELECT u
                                          FROM MindUserBundle:User u
                                          WHERE u.username LIKE :terms
                                         ');
        
        $query->setParameter('terms', $terms.'%');
        
        return $query->getResult();
                
    }
    
    /**
     * 
     * Fournit la liste des conversation par dossier bal|archive
     * 
     * @param type $idUserAuteur
     * @param type $dossier
     * @return type
     */
    public function getConversationForConversationType($idUserAuteur, $dossier){
        
      
        $query = $this->_em->createQuery('SELECT c
                                          FROM MindMpBundle:Conversation c, MindMpBundle:Participants p,
                                               MindMpBundle:Dossier d
                                          where c.id = p.idConversation
                                          AND c.id = d.idConversation
                                          AND d.dossier = :dossier
                                          AND d.idUser = :idUser
                                          AND p.idUser = :idUser
                                          ORDER BY c.dateDebutConversation DESC
                                         ');
        
        $query->setParameter('idUser', $idUserAuteur);
        $query->setParameter('dossier', $dossier);
        
        return $query->getResult();
    }
    
    /**
     * 
     * Il s'agit des conversations pour la notification
     * 
     * @param type $idUser
     * @return type
     */
    public function findConversationByIdUser($idUser){
        
        $query = $this->_em->createQuery('SELECT c
                                          FROM MindMpBundle:Conversation c, MindMpBundle:Participants p
                                          WHERE c.id = p.idConversation 
                                          AND p.idUser = :idUser
                                         ');
        $query->setParameter('idUser', $idUser);
        
        return $query->getResult();
    }
    
}
