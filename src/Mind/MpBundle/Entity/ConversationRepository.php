<?php

namespace Mind\MpBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ConversationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ConversationRepository extends EntityRepository
{
    public function getAutocompleteResult($terms){
        
        $query = $this->_em->createQuery('SELECT u
                                          FROM MindUserBundle:User u
                                          WHERE u.username LIKE :terms
                                         ');
        
        $query->setParameter('terms', $terms.'%');
        
        return $query->getResult();
    }
    
    public function getConversations($idParticipant, $dossier, $idConversation  = null ){
        
        $query = $this->_em->createQuery();
        
        if($idConversation == null){
            $query->setDQL('SELECT p
                            FROM MindMpBundle:Conversation p
                            WHERE p.dossier = :dossier
                           ');
        }
        else{
            
            $query->setDQL('SELECT p
                            FROM MindMpBundle:Conversation p
                            WHERE p.id = :id
                            AND p.dossier = :dossier
                           ');
            
            $query->setParameter('id', $idConversation);
        }
       
        $query->setParameter('dossier', $dossier);
        
        $conversations = $query->getResult();
        $conversations = $this->isParticipant($conversations, $idParticipant);
       
       return $conversations;
    }
    
    public function isParticipant($conversations, $idParticipant){
        
        $tabParticipant         = array();
        $tabConversationOfUser  = array();
        
        foreach ($conversations as $conversation){
            
            $tabParticipant = $conversation->getTabParticipants();
           
            if(in_array($idParticipant, $tabParticipant)){
                
                $tabConversationOfUser[]    = $conversation;
            }
        }
        
        return $tabConversationOfUser;
    }
}
